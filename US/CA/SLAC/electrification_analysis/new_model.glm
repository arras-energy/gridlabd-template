// Model for electric and gas houses

#input "new_config.csv" -f config -t config

// Climate
#input "${WEATHER}" 

// Clock
clock 
{
	timezone ${TIMEZONE};
	starttime ${STARTTIME};
	stoptime ${STOPTIME};
}

module tape
{
    csv_header_type NAME;
}

module residential
{
	implicit_enduses ${ALLENDUSES};
	implicit_enduse_source EIA2015;
    paneldump_filename "paneldump.csv";
    paneldump_interval 3600;
}

module powerflow;

object currdump
{
    filemode "a";
    filename "curr_dump.csv";
    interval 3600;
    maxcount 0;
    mode "POLAR";
};

#for PHASE in A B C
object triplex_meter 
{
    object house:..${NHOUSES_ELEC} 
    {
         thermal_integrity_level ${THERMALINTEGRITYLEVEL};
         floor_area random.triangle(MIN_FLOORAREA, MAX_FLOORAREA);
         gas_enduses ${GASENDUSES};
         heating_setpoint random.triangle(70, 72);
         cooling_setpoint random.triangle(73, 75);
         heating_system_type "HEAT_PUMP";
         cooling_system_type "HEAT_PUMP";
    };

    object house:..${NHOUSES_GAS_AC} 
    {
         thermal_integrity_level ${THERMALINTEGRITYLEVEL};
         floor_area random.triangle(MIN_FLOORAREA, MAX_FLOORAREA);
         gas_enduses ${ALLENDUSES};
         heating_setpoint random.triangle(70, 72);
         cooling_setpoint random.triangle(73, 75);
         heating_system_type "GAS";
         cooling_system_type "ELECTRIC";
    };

    object house:..${NHOUSES_GAS_NONE} 
    {
         thermal_integrity_level ${THERMALINTEGRITYLEVEL};
         floor_area random.triangle(MIN_FLOORAREA, MAX_FLOORAREA);
         gas_enduses ${ALLENDUSES};
         heating_setpoint random.triangle(70, 72);
         cooling_setpoint random.triangle(73, 75);
         heating_system_type "GAS";
         cooling_system_type "NONE";
    };

    nominal_voltage 120V;
    phases S${PHASE};
    measured_energy_delta_timestep 3600s;
    object recorder
    {
        property "measured_real_energy_delta";
        file phase_${PHASE}.csv;
        interval 3600s;
    };
}
#done

