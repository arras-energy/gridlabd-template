// Model for electric and gas houses

#input "config.csv" -f config -t config
#define minimum_timestep = 3600s

// Climate
module climate;
object climate
{
    tmyfile ${WEATHER};
}

// Clock
clock 
{
	timezone ${TIMEZONE};
	starttime ${STARTTIME};
	stoptime ${STOPTIME};
}

module tape
{
    csv_header_type NAME;
}

module residential
{
	implicit_enduses REFRIGERATOR|LIGHTS|PLUGS|WATERHEATER|RANGE|DRYER|CLOTHESWASHER|FREEZER|MICROWAVE|DISHWASHER;
	implicit_enduse_source EIA2015;
    paneldump_filename "paneldump.csv";
    paneldump_interval 3600;
}

module powerflow;

#for PHASE in A B C
object triplex_meter 
{
    object house:..${NHOUSES_ELEC} 
    {
         thermal_integrity_level ${THERMALINTEGRITYLEVEL};
         floor_area random.triangle(1000, 2000);
         heating_setpoint random.triangle(69, 73);
         cooling_setpoint random.triangle(72, 74);
         heating_system_type ${HEATINGSYSTEMTYPE};
         cooling_system_type ${COOLINGSYSTEMTYPE};
    };

    object house:..${NHOUSES_GAS} 
    {
         thermal_integrity_level ${THERMALINTEGRITYLEVEL};
         floor_area random.triangle(1000, 2000);
         gas_enduses ${GASENDUSES};
         heating_setpoint random.triangle(69, 73);
         cooling_setpoint random.triangle(72, 74);
         heating_system_type "GAS";
         cooling_system_type "ELECTRIC";
    };

    nominal_voltage 120V;
    phases S${PHASE};
    measured_energy_delta_timestep 3600s;
    object recorder
    {
        property "measured_real_energy_delta";
        file phase_${PHASE}.csv;
        interval 3600s;
    };
}
#done

#if ${CURRDUMP}=="ENABLE" 
object currdump
{
    filemode "a";
    filename "curr_dump.csv";
    interval 3600;
    maxcount 0;
    mode "POLAR";
}
#endif 
